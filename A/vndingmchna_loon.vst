entity vndingmchna_loon is
   port (
      clk    : in      bit;
      res    : in      bit;
      onein  : in      bit;
      halfin : in      bit;
      can    : out     bit;
      change : out     bit;
      vdd    : in      bit;
      vss    : in      bit
 );
end vndingmchna_loon;

architecture structural of vndingmchna_loon is
Component o2_x2
   port (
      i0  : in      bit;
      i1  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component a2_x2
   port (
      i0  : in      bit;
      i1  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component xr2_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component inv_x4
   port (
      i   : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component na3_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component no3_x1
   port (
      i1  : in      bit;
      i0  : in      bit;
      i2  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component an12_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component no2_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component o4_x2
   port (
      i2  : in      bit;
      i0  : in      bit;
      i1  : in      bit;
      i3  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component o3_x2
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component inv_x2
   port (
      i   : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component na4_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      i3  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component na2_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component sff1_x4
   port (
      ck  : in      bit;
      i   : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component oa22_x2
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component buf_x2
   port (
      i   : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

signal mbk_buf_vndingmchn_currstt : bit_vector( 2 downto 2);
signal not_vndingmchn_currstt     : bit_vector( 2 downto 0);
signal vndingmchn_currstt         : bit_vector( 2 downto 0);
signal oa22_x2_sig                : bit;
signal o4_x2_sig                  : bit;
signal o3_x2_sig                  : bit;
signal not_res                    : bit;
signal not_halfin                 : bit;
signal not_aux2                   : bit;
signal not_aux1                   : bit;
signal not_aux0                   : bit;
signal no3_x1_sig                 : bit;
signal no3_x1_2_sig               : bit;
signal no2_x1_sig                 : bit;
signal no2_x1_2_sig               : bit;
signal na4_x1_sig                 : bit;
signal na3_x1_sig                 : bit;
signal na2_x1_sig                 : bit;
signal na2_x1_2_sig               : bit;
signal inv_x2_sig                 : bit;
signal inv_x2_2_sig               : bit;
signal aux3                       : bit;
signal an12_x1_sig                : bit;

begin

not_aux2_ins : o2_x2
   port map (
      i0  => vndingmchn_currstt(1),
      i1  => not_vndingmchn_currstt(2),
      q   => not_aux2,
      vdd => vdd,
      vss => vss
   );

no2_x1_ins : no2_x1
   port map (
      i0  => onein,
      i1  => not_halfin,
      nq  => no2_x1_sig,
      vdd => vdd,
      vss => vss
   );

not_aux0_ins : a2_x2
   port map (
      i0  => no2_x1_sig,
      i1  => not_vndingmchn_currstt(0),
      q   => not_aux0,
      vdd => vdd,
      vss => vss
   );

not_aux1_ins : xr2_x1
   port map (
      i0  => onein,
      i1  => halfin,
      q   => not_aux1,
      vdd => vdd,
      vss => vss
   );

not_vndingmchn_currstt_2_ins : inv_x4
   port map (
      i   => vndingmchn_currstt(2),
      nq  => not_vndingmchn_currstt(2),
      vdd => vdd,
      vss => vss
   );

not_vndingmchn_currstt_0_ins : inv_x2
   port map (
      i   => vndingmchn_currstt(0),
      nq  => not_vndingmchn_currstt(0),
      vdd => vdd,
      vss => vss
   );

not_res_ins : inv_x2
   port map (
      i   => res,
      nq  => not_res,
      vdd => vdd,
      vss => vss
   );

not_halfin_ins : inv_x2
   port map (
      i   => halfin,
      nq  => not_halfin,
      vdd => vdd,
      vss => vss
   );

aux3_ins : no2_x1
   port map (
      i0  => mbk_buf_vndingmchn_currstt(2),
      i1  => vndingmchn_currstt(1),
      nq  => aux3,
      vdd => vdd,
      vss => vss
   );

na3_x1_ins : na3_x1
   port map (
      i0  => onein,
      i1  => not_res,
      i2  => not_halfin,
      nq  => na3_x1_sig,
      vdd => vdd,
      vss => vss
   );

inv_x2_ins : inv_x2
   port map (
      i   => aux3,
      nq  => inv_x2_sig,
      vdd => vdd,
      vss => vss
   );

no3_x1_ins : no3_x1
   port map (
      i0  => inv_x2_sig,
      i1  => vndingmchn_currstt(0),
      i2  => na3_x1_sig,
      nq  => no3_x1_sig,
      vdd => vdd,
      vss => vss
   );

vndingmchn_currstt_0_ins : sff1_x4
   port map (
      ck  => clk,
      i   => no3_x1_sig,
      q   => vndingmchn_currstt(0),
      vdd => vdd,
      vss => vss
   );

na2_x1_ins : na2_x1
   port map (
      i0  => onein,
      i1  => not_halfin,
      nq  => na2_x1_sig,
      vdd => vdd,
      vss => vss
   );

no3_x1_2_ins : no3_x1
   port map (
      i1  => not_vndingmchn_currstt(2),
      i0  => vndingmchn_currstt(1),
      i2  => na2_x1_sig,
      nq  => no3_x1_2_sig,
      vdd => vdd,
      vss => vss
   );

an12_x1_ins : an12_x1
   port map (
      i0  => not_aux1,
      i1  => vndingmchn_currstt(1),
      q   => an12_x1_sig,
      vdd => vdd,
      vss => vss
   );

no2_x1_2_ins : no2_x1
   port map (
      i0  => not_aux1,
      i1  => not_vndingmchn_currstt(0),
      nq  => no2_x1_2_sig,
      vdd => vdd,
      vss => vss
   );

o4_x2_ins : o4_x2
   port map (
      i2  => no2_x1_2_sig,
      i0  => res,
      i1  => an12_x1_sig,
      i3  => no3_x1_2_sig,
      q   => o4_x2_sig,
      vdd => vdd,
      vss => vss
   );

oa22_x2_ins : oa22_x2
   port map (
      i0  => not_aux0,
      i1  => aux3,
      i2  => o4_x2_sig,
      q   => oa22_x2_sig,
      vdd => vdd,
      vss => vss
   );

vndingmchn_currstt_1_ins : sff1_x4
   port map (
      ck  => clk,
      i   => oa22_x2_sig,
      q   => vndingmchn_currstt(1),
      vdd => vdd,
      vss => vss
   );

o3_x2_ins : o3_x2
   port map (
      i0  => not_aux0,
      i1  => res,
      i2  => not_aux2,
      q   => o3_x2_sig,
      vdd => vdd,
      vss => vss
   );

inv_x2_2_ins : inv_x2
   port map (
      i   => onein,
      nq  => inv_x2_2_sig,
      vdd => vdd,
      vss => vss
   );

na4_x1_ins : na4_x1
   port map (
      i0  => not_aux2,
      i1  => halfin,
      i2  => inv_x2_2_sig,
      i3  => not_res,
      nq  => na4_x1_sig,
      vdd => vdd,
      vss => vss
   );

na2_x1_2_ins : na2_x1
   port map (
      i0  => na4_x1_sig,
      i1  => o3_x2_sig,
      nq  => na2_x1_2_sig,
      vdd => vdd,
      vss => vss
   );

vndingmchn_currstt_2_ins : sff1_x4
   port map (
      ck  => clk,
      i   => na2_x1_2_sig,
      q   => vndingmchn_currstt(2),
      vdd => vdd,
      vss => vss
   );

change_ins : buf_x2
   port map (
      i   => vndingmchn_currstt(0),
      q   => change,
      vdd => vdd,
      vss => vss
   );

can_ins : oa22_x2
   port map (
      i0  => vndingmchn_currstt(1),
      i1  => mbk_buf_vndingmchn_currstt(2),
      i2  => vndingmchn_currstt(0),
      q   => can,
      vdd => vdd,
      vss => vss
   );

dmbk_buf_vndingmchn_currstt_2 : buf_x2
   port map (
      i   => vndingmchn_currstt(2),
      q   => mbk_buf_vndingmchn_currstt(2),
      vdd => vdd,
      vss => vss
   );


end structural;
