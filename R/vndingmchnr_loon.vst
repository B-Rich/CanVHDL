entity vndingmchnr_loon is
   port (
      clk    : in      bit;
      res    : in      bit;
      onein  : in      bit;
      halfin : in      bit;
      can    : out     bit;
      change : out     bit;
      vdd    : in      bit;
      vss    : in      bit
 );
end vndingmchnr_loon;

architecture structural of vndingmchnr_loon is
Component a2_x2
   port (
      i0  : in      bit;
      i1  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component inv_x4
   port (
      i   : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component on12_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component o4_x2
   port (
      i0  : in      bit;
      i1  : in      bit;
      i3  : in      bit;
      i2  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component o2_x2
   port (
      i0  : in      bit;
      i1  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component noa22_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component sff1_x4
   port (
      ck  : in      bit;
      i   : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component nxr2_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component na2_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component inv_x2
   port (
      i   : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component nao22_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component na3_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      i2  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component sff2_x4
   port (
      ck  : in      bit;
      cmd : in      bit;
      i0  : in      bit;
      i1  : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component no2_x1
   port (
      i0  : in      bit;
      i1  : in      bit;
      nq  : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component buf_x4
   port (
      i   : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

Component buf_x2
   port (
      i   : in      bit;
      q   : out     bit;
      vdd : in      bit;
      vss : in      bit
 );
end component;

signal mbk_buf_not_vndingmchn_currstt : bit_vector( 0 downto 0);
signal not_vndingmchn_currstt         : bit_vector( 0 downto 0);
signal vndingmchn_currstt             : bit_vector( 2 downto 0);
signal o4_x2_sig                      : bit;
signal o2_x2_sig                      : bit;
signal nxr2_x1_sig                    : bit;
signal not_res                        : bit;
signal not_onein                      : bit;
signal not_halfin                     : bit;
signal not_aux3                       : bit;
signal not_aux1                       : bit;
signal not_aux0                       : bit;
signal noa22_x1_sig                   : bit;
signal no2_x1_sig                     : bit;
signal nao22_x1_sig                   : bit;
signal nao22_x1_2_sig                 : bit;
signal na3_x1_sig                     : bit;
signal na3_x1_2_sig                   : bit;
signal na2_x1_sig                     : bit;
signal mbk_buf_not_aux0               : bit;
signal mbk_buf_aux3                   : bit;
signal inv_x2_sig                     : bit;
signal inv_x2_2_sig                   : bit;
signal aux3                           : bit;
signal aux2                           : bit;

begin

not_aux3_ins : inv_x2
   port map (
      i   => aux3,
      nq  => not_aux3,
      vdd => vdd,
      vss => vss
   );

not_aux0_ins : a2_x2
   port map (
      i0  => vndingmchn_currstt(2),
      i1  => not_vndingmchn_currstt(0),
      q   => not_aux0,
      vdd => vdd,
      vss => vss
   );

not_aux1_ins : a2_x2
   port map (
      i0  => vndingmchn_currstt(0),
      i1  => vndingmchn_currstt(1),
      q   => not_aux1,
      vdd => vdd,
      vss => vss
   );

not_vndingmchn_currstt_0_ins : inv_x4
   port map (
      i   => vndingmchn_currstt(0),
      nq  => not_vndingmchn_currstt(0),
      vdd => vdd,
      vss => vss
   );

not_res_ins : inv_x2
   port map (
      i   => res,
      nq  => not_res,
      vdd => vdd,
      vss => vss
   );

not_onein_ins : inv_x2
   port map (
      i   => onein,
      nq  => not_onein,
      vdd => vdd,
      vss => vss
   );

not_halfin_ins : inv_x2
   port map (
      i   => halfin,
      nq  => not_halfin,
      vdd => vdd,
      vss => vss
   );

aux3_ins : on12_x1
   port map (
      i0  => not_aux0,
      i1  => vndingmchn_currstt(1),
      q   => aux3,
      vdd => vdd,
      vss => vss
   );

aux2_ins : na2_x1
   port map (
      i0  => not_aux1,
      i1  => not_halfin,
      nq  => aux2,
      vdd => vdd,
      vss => vss
   );

no2_x1_ins : no2_x1
   port map (
      i0  => not_aux1,
      i1  => not_halfin,
      nq  => no2_x1_sig,
      vdd => vdd,
      vss => vss
   );

o4_x2_ins : o4_x2
   port map (
      i0  => res,
      i1  => not_onein,
      i3  => not_aux3,
      i2  => no2_x1_sig,
      q   => o4_x2_sig,
      vdd => vdd,
      vss => vss
   );

o2_x2_ins : o2_x2
   port map (
      i0  => onein,
      i1  => res,
      q   => o2_x2_sig,
      vdd => vdd,
      vss => vss
   );

inv_x2_ins : inv_x2
   port map (
      i   => aux2,
      nq  => inv_x2_sig,
      vdd => vdd,
      vss => vss
   );

noa22_x1_ins : noa22_x1
   port map (
      i0  => not_aux3,
      i1  => halfin,
      i2  => inv_x2_sig,
      nq  => noa22_x1_sig,
      vdd => vdd,
      vss => vss
   );

nao22_x1_ins : nao22_x1
   port map (
      i0  => noa22_x1_sig,
      i1  => o2_x2_sig,
      i2  => o4_x2_sig,
      nq  => nao22_x1_sig,
      vdd => vdd,
      vss => vss
   );

vndingmchn_currstt_0_ins : sff1_x4
   port map (
      ck  => clk,
      i   => nao22_x1_sig,
      q   => vndingmchn_currstt(0),
      vdd => vdd,
      vss => vss
   );

nxr2_x1_ins : nxr2_x1
   port map (
      i0  => mbk_buf_aux3,
      i1  => halfin,
      nq  => nxr2_x1_sig,
      vdd => vdd,
      vss => vss
   );

na2_x1_ins : na2_x1
   port map (
      i0  => not_res,
      i1  => nxr2_x1_sig,
      nq  => na2_x1_sig,
      vdd => vdd,
      vss => vss
   );

inv_x2_2_ins : inv_x2
   port map (
      i   => aux2,
      nq  => inv_x2_2_sig,
      vdd => vdd,
      vss => vss
   );

nao22_x1_2_ins : nao22_x1
   port map (
      i0  => not_aux3,
      i1  => inv_x2_2_sig,
      i2  => not_res,
      nq  => nao22_x1_2_sig,
      vdd => vdd,
      vss => vss
   );

vndingmchn_currstt_1_ins : sff2_x4
   port map (
      ck  => clk,
      cmd => not_onein,
      i0  => nao22_x1_2_sig,
      i1  => na2_x1_sig,
      q   => vndingmchn_currstt(1),
      vdd => vdd,
      vss => vss
   );

na3_x1_ins : na3_x1
   port map (
      i0  => not_res,
      i1  => not_aux3,
      i2  => not_halfin,
      nq  => na3_x1_sig,
      vdd => vdd,
      vss => vss
   );

na3_x1_2_ins : na3_x1
   port map (
      i0  => halfin,
      i1  => not_aux1,
      i2  => not_res,
      nq  => na3_x1_2_sig,
      vdd => vdd,
      vss => vss
   );

vndingmchn_currstt_2_ins : sff2_x4
   port map (
      ck  => clk,
      cmd => onein,
      i0  => na3_x1_2_sig,
      i1  => na3_x1_sig,
      q   => vndingmchn_currstt(2),
      vdd => vdd,
      vss => vss
   );

change_ins : no2_x1
   port map (
      i0  => vndingmchn_currstt(1),
      i1  => mbk_buf_not_vndingmchn_currstt(0),
      nq  => change,
      vdd => vdd,
      vss => vss
   );

can_ins : no2_x1
   port map (
      i0  => mbk_buf_not_aux0,
      i1  => vndingmchn_currstt(1),
      nq  => can,
      vdd => vdd,
      vss => vss
   );

mbk_buf_aux3 : buf_x4
   port map (
      i   => aux3,
      q   => mbk_buf_aux3,
      vdd => vdd,
      vss => vss
   );

mbk_buf_not_vndingmchn_currstt_0 : buf_x2
   port map (
      i   => not_vndingmchn_currstt(0),
      q   => mbk_buf_not_vndingmchn_currstt(0),
      vdd => vdd,
      vss => vss
   );

mbk_buf_not_aux0 : buf_x2
   port map (
      i   => not_aux0,
      q   => mbk_buf_not_aux0,
      vdd => vdd,
      vss => vss
   );


end structural;
