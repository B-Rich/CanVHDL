-- VHDL data flow description generated from `vndingmchnr_fb`
--		date : Fri May 20 09:39:55 2016


-- Entity Declaration

ENTITY vndingmchnr_fb IS
  PORT (
  vss : in BIT;	-- vss
  vdd : in BIT;	-- vdd
  change : out BIT;	-- change
  can : out BIT;	-- can
  halfin : in BIT;	-- halfin
  onein : in BIT;	-- onein
  res : in BIT;	-- res
  clk : in BIT	-- clk
  );
END vndingmchnr_fb;


-- Architecture Declaration

ARCHITECTURE behaviour_data_flow OF vndingmchnr_fb IS
  SIGNAL vndingmchn_currstt : REG_VECTOR(2 DOWNTO 0) REGISTER;	-- vndingmchn_currstt
  SIGNAL not_aux3 : BIT;		-- not_aux3
  SIGNAL not_aux0 : BIT;		-- not_aux0
  SIGNAL not_aux1 : BIT;		-- not_aux1
  SIGNAL not_vndingmchn_currstt : BIT_VECTOR(0 DOWNTO 0);	-- not_vndingmchn_currstt
  SIGNAL not_res : BIT;		-- not_res
  SIGNAL not_onein : BIT;		-- not_onein
  SIGNAL not_halfin : BIT;		-- not_halfin
  SIGNAL aux3 : BIT;		-- aux3
  SIGNAL aux2 : BIT;		-- aux2
  SIGNAL no2_x1_sig : BIT;		-- no2_x1_sig
  SIGNAL o4_x2_sig : BIT;		-- o4_x2_sig
  SIGNAL o2_x2_sig : BIT;		-- o2_x2_sig
  SIGNAL inv_x2_sig : BIT;		-- inv_x2_sig
  SIGNAL noa22_x1_sig : BIT;		-- noa22_x1_sig
  SIGNAL nao22_x1_sig : BIT;		-- nao22_x1_sig
  SIGNAL nxr2_x1_sig : BIT;		-- nxr2_x1_sig
  SIGNAL na2_x1_sig : BIT;		-- na2_x1_sig
  SIGNAL inv_x2_2_sig : BIT;		-- inv_x2_2_sig
  SIGNAL nao22_x1_2_sig : BIT;		-- nao22_x1_2_sig
  SIGNAL na3_x1_sig : BIT;		-- na3_x1_sig
  SIGNAL na3_x1_2_sig : BIT;		-- na3_x1_2_sig
  SIGNAL mbk_buf_aux3 : BIT;		-- mbk_buf_aux3
  SIGNAL mbk_buf_not_vndingmchn_currstt : BIT_VECTOR(0 DOWNTO 0);	-- mbk_buf_not_vndingmchn_currstt
  SIGNAL mbk_buf_not_aux0 : BIT;		-- mbk_buf_not_aux0

BEGIN
  mbk_buf_not_aux0 <= not_aux0;
  mbk_buf_not_vndingmchn_currstt (0) <= not_vndingmchn_currstt(0);
  mbk_buf_aux3 <= aux3;
  na3_x1_2_sig <= NOT(((halfin AND not_aux1) AND not_res));
  na3_x1_sig <= NOT(((not_res AND not_aux3) AND not_halfin));
  nao22_x1_2_sig <= NOT(((not_aux3 OR inv_x2_2_sig) AND not_res));
  inv_x2_2_sig <= NOT(aux2);
  na2_x1_sig <= NOT((not_res AND nxr2_x1_sig));
  nxr2_x1_sig <= NOT((mbk_buf_aux3 XOR halfin));
  nao22_x1_sig <= NOT(((noa22_x1_sig OR o2_x2_sig) AND o4_x2_sig));
  noa22_x1_sig <= NOT(((not_aux3 AND halfin) OR inv_x2_sig));
  inv_x2_sig <= NOT(aux2);
  o2_x2_sig <= (onein OR res);
  o4_x2_sig <= (((res OR not_onein) OR no2_x1_sig) OR not_aux3);
  no2_x1_sig <= NOT((not_aux1 OR not_halfin));
  aux2 <= NOT((not_aux1 AND not_halfin));
  aux3 <= (NOT(not_aux0) OR vndingmchn_currstt(1));
  not_halfin <= NOT(halfin);
  not_onein <= NOT(onein);
  not_res <= NOT(res);
  not_vndingmchn_currstt (0) <= NOT(vndingmchn_currstt(0));
  not_aux1 <= (vndingmchn_currstt(0) AND vndingmchn_currstt(1));
  not_aux0 <= (vndingmchn_currstt(2) AND 
not_vndingmchn_currstt(0));
  not_aux3 <= NOT(aux3);
  label0 : BLOCK (NOT(((clk AND NOT((clk'STABLE))) XOR '1')) = '1')
  BEGIN
    vndingmchn_currstt (0) <= GUARDED nao22_x1_sig;
  END BLOCK label0;
  label1 : BLOCK (NOT(((clk AND NOT((clk'STABLE))) XOR '1')) = '1')
  BEGIN
    vndingmchn_currstt (1) <= GUARDED ((na2_x1_sig AND not_onein) OR (nao22_x1_2_sig 
AND NOT(not_onein)));
  END BLOCK label1;
  label2 : BLOCK (NOT(((clk AND NOT((clk'STABLE))) XOR '1')) = '1')
  BEGIN
    vndingmchn_currstt (2) <= GUARDED ((na3_x1_sig AND onein) OR (na3_x1_2_sig AND NOT(
onein)));
  END BLOCK label2;

change <= NOT((vndingmchn_currstt(1) OR 
mbk_buf_not_vndingmchn_currstt(0)));

can <= NOT((mbk_buf_not_aux0 OR vndingmchn_currstt(1)));
END;
